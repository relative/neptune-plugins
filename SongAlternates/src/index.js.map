{
  "version": 3,
  "sources": ["../../../util/hooks/react.ts", "../../../plugins/SongAlternates/src/state.ts", "../../../plugins/SongAlternates/src/react.tsx", "../../../util/jsx-runtime.ts", "../../../plugins/SongAlternates/src/index.ts"],
  "sourcesContent": ["import type React from 'react'\r\nimport { modules } from '@neptune'\r\n\r\nexport function findReactModule() {\r\n  const react = modules.find(e => e.exports?.createElement)\r\n  if (!react) throw new Error(\"Couldn't find React module\")\r\n  return react.exports as typeof React\r\n}\r\n\r\nfunction hookReactCreateElement() {\r\n  // console.log(findReactModule().createElement.toString())\r\n}\r\n\r\n// main\r\nhookReactCreateElement()\r\n", "export const unints: Array<() => void> = []\r\n", "import { findReactModule } from '@relative/util/hooks/react'\r\nimport { unints } from './state'\r\n\r\nimport type { ItemId } from '../../../lib/tidal'\r\nimport { actions, intercept } from '@neptune'\r\n\r\nconst React = findReactModule()\r\nconst em = React as any\r\n\r\ninterface TidalElements {\r\n  ContextMenuAction: (\r\n    props: Readonly<{\r\n      action?: React.MouseEventHandler | ((arg: any) => void)\r\n      children?: React.ReactNode\r\n      closeOnClick?: boolean\r\n      dataActionName?: string\r\n      dataTest?: string\r\n      disabled?: boolean\r\n      enabled?: boolean\r\n      index?: number\r\n      leftIcon?: React.ReactNode // | 'whitespace';\r\n      playlistUuid?: ItemId\r\n      rightIcon?: React.ReactNode\r\n      showSubMenu?: boolean\r\n      title: React.ReactNode | string\r\n    }>\r\n  ) => JSX.Child\r\n  ContextMenu: (props: any) => JSX.Child\r\n  PromptItemCell: (props: {\r\n    artist: string\r\n    cover: string\r\n    onClick: () => void\r\n    playButton: boolean\r\n    title: string\r\n  }) => JSX.Child\r\n}\r\n\r\nconst ele = new Proxy<TidalElements>({} as any, {\r\n  get(t, p, r) {\r\n    const got = Reflect.get(t, p, r)\r\n    if (got) return got\r\n    else return <span>component {p} has not been captured yet</span>\r\n  },\r\n})\r\n\r\nfunction traverseElement(\r\n  e: React.ReactElement,\r\n  filterCb: (e: React.ReactElement) => boolean\r\n): React.ReactElement | undefined {\r\n  if (e.props) {\r\n    if (Array.isArray(e.props.children)) {\r\n      for (const i of e.props.children) {\r\n        if (filterCb(i)) return i\r\n        let found = traverseElement(i, filterCb)\r\n        if (found) return found\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nunints.push(\r\n  (origCreateElement => {\r\n    if (!em._createElement) em._createElement = origCreateElement\r\n\r\n    function ContextMenuHook({ children, ...props }: any) {\r\n      const newRet = (<ele.ContextMenu {...props} __ignore />) as any as React.ReactElement\r\n\r\n      const yes = (\r\n        <ele.ContextMenuAction\r\n          title=\"Replace track\"\r\n          action={() => {\r\n            const searchPhrase = props.mediaItem?.item?.title + ' ' + props.mediaItem?.item?.artist?.name\r\n\r\n            actions.modal.showPickTrackModal({ promptId: 666, userId: 666 })\r\n            actions.search.searchTrackForTrackPicker({\r\n              limit: 10,\r\n              searchPhrase,\r\n            })\r\n\r\n            // There is a bug in tidal code where the track picker modal tries using a non uri-encoded searchPhrase to pull search results\r\n            actions.trackPrompts.setTrackSearchPhrase(encodeURIComponent(searchPhrase))\r\n\r\n            const unint = intercept('trackPrompts/SET_TRACK_FOR_PROMPT', ([pl]) => {\r\n                props.deleteFromPlaylist(props.playlistData)\r\n                actions.content.addMediaItemsToPlaylist({\r\n                  playlistUUID: props.playlistData.currentPlaylistUuid,\r\n                  onDupes: 'FAIL',\r\n                  showNotification: true,\r\n                  addToIndex: props.index,\r\n                  mediaItemIdsToAdd: [parseInt(pl.trn.split(':').reverse()[0])],\r\n                })\r\n                unintClose()\r\n                unint()\r\n                return false\r\n              }),\r\n              unintClose = intercept('modal/CLOSE', unint, true)\r\n          }}\r\n        ></ele.ContextMenuAction>\r\n      )\r\n\r\n      // @ts-expect-error\r\n      newRet._type = newRet._type || newRet.type\r\n      newRet.type = function (...args) {\r\n        // @ts-expect-error shh\r\n        const retn = newRet._type.apply(this, arguments)\r\n        if (props.playlistData?.currentPlaylistUuid) retn.props.children[1].props.children.push(yes)\r\n        return retn\r\n      }\r\n      return newRet\r\n    }\r\n    // function PromptItemCellHook({ children, ...props }: any) {\r\n    //   const newRet = (<ele.PromptItemCell {...props} __ignore />) as any as React.ReactElement\r\n    //   // @ts-expect-error shh\r\n    //   newRet._type = newRet._type || newRet.type\r\n    //   newRet.type = function (...args) {\r\n    //     // @ts-expect-error shh\r\n    //     const retn = newRet._type.apply(this, arguments)\r\n    //     const found = traverseElement(retn, e => e.props?.wavePreset === 'bodyDemi')\r\n    //     if (found) console.log('Found title text', found)\r\n    //     return retn\r\n    //   }\r\n    //   return newRet\r\n    // }\r\n\r\n    ;(React as any).createElement = function (el: any, props: any, ...children: any[]) {\r\n      if (!props?.__ignore) {\r\n        const ts = el.toString()\r\n        // if (ts.includes('showSecretSettings')) {\r\n        //   ele.PlayerSettings = el\r\n        //   el.prototype._render = el.prototype._render || el.prototype.render\r\n        //   el.prototype.render = function (...args) {\r\n        //     if (!this.state.showSecretSettings) this.setState({ showSecretSettings: true })\r\n        //     return this._render.apply(this, arguments)\r\n        //   }\r\n        // }\r\n\r\n        if (ts.includes(`\"whitespace\"===`)) ele.ContextMenuAction = el\r\n\r\n        if (\r\n          ts.includes('artist') &&\r\n          ts.includes('bodyDemi') &&\r\n          ts.includes('descriptionDemi') &&\r\n          ts.includes('textSecondary') &&\r\n          ts.includes('play-button')\r\n        ) {\r\n          ele.PromptItemCell = el\r\n          // el = PromptItemCellHook\r\n        }\r\n\r\n        if (\r\n          ts.includes('t-go-to-album') &&\r\n          ts.includes('trackList') &&\r\n          ts.includes('playQueue') &&\r\n          el !== ContextMenuHook\r\n        ) {\r\n          ele.ContextMenu = el\r\n          el = ContextMenuHook\r\n        }\r\n      }\r\n      const retn = origCreateElement.call(this, el, props, ...children)\r\n      return retn\r\n    }\r\n\r\n    return () => (React.createElement = origCreateElement)\r\n  })(em._createElement || React.createElement)\r\n)\r\n", "import { findReactModule } from './hooks/react'\r\n\r\n/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n * @see https://github.com/facebook/react/blob/main/packages/react/src/jsx/ReactJSXElement.js\r\n */\r\n\r\nconst RESERVED_PROPS = {\r\n  key: true,\r\n  ref: true,\r\n  __self: true,\r\n  __source: true,\r\n  children: true,\r\n}\r\n\r\nconst { hasOwnProperty } = Object.prototype\r\n\r\nexport function jsx(type: any, config: any, maybeKey?: string) {\r\n  let key: string | null = null\r\n  let ref: any = null\r\n  let children: any = null\r\n\r\n  let props: any = {}\r\n\r\n  if (maybeKey !== undefined) key = '' + maybeKey\r\n  if (config.key !== undefined) key = '' + config.key\r\n  if (config.ref !== undefined) ref = config.ref\r\n  if (config.children !== undefined) children = config.children\r\n\r\n  for (const propName in config)\r\n    if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName))\r\n      props[propName] = config[propName]\r\n\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps\r\n    for (const propName in defaultProps) if (props[propName] === undefined) props[propName] = defaultProps[propName]\r\n  }\r\n\r\n  return findReactModule().createElement(type, props, children)\r\n}\r\nexport const jsxs = jsx\r\nexport const Fragment = findReactModule().Fragment\r\n", "import '@relative/util'\r\nimport { unints } from './state'\r\nimport './react'\r\n\r\nexport function onUnload() {\r\n  unints.forEach(e => e())\r\n}\r\n"],
  "mappings": "AACA,OAAS,WAAAA,MAAe,WAEjB,SAASC,GAAkB,CAChC,IAAMC,EAAQF,EAAQ,KAAKG,GAAKA,EAAE,SAAS,aAAa,EACxD,GAAI,CAACD,EAAO,MAAM,IAAI,MAAM,4BAA4B,EACxD,OAAOA,EAAM,OACf,CCPO,IAAME,EAA4B,CAAC,ECI1C,OAAS,WAAAC,EAAS,aAAAC,MAAiB,WCMnC,IAAMC,EAAiB,CACrB,IAAK,GACL,IAAK,GACL,OAAQ,GACR,SAAU,GACV,SAAU,EACZ,EAEM,CAAE,eAAAC,CAAe,EAAI,OAAO,UAE3B,SAASC,EAAIC,EAAWC,EAAaC,EAAmB,CAC7D,IAAIC,EAAqB,KACrBC,EAAW,KACXC,EAAgB,KAEhBC,EAAa,CAAC,EAEdJ,IAAa,SAAWC,EAAM,GAAKD,GACnCD,EAAO,MAAQ,SAAWE,EAAM,GAAKF,EAAO,KAC5CA,EAAO,MAAQ,SAAWG,EAAMH,EAAO,KACvCA,EAAO,WAAa,SAAWI,EAAWJ,EAAO,UAErD,QAAWM,KAAYN,EACjBH,EAAe,KAAKG,EAAQM,CAAQ,GAAK,CAACV,EAAe,eAAeU,CAAQ,IAClFD,EAAMC,CAAQ,EAAIN,EAAOM,CAAQ,GAErC,GAAIP,GAAQA,EAAK,aAAc,CAC7B,IAAMQ,EAAeR,EAAK,aAC1B,QAAWO,KAAYC,EAAkBF,EAAMC,CAAQ,IAAM,SAAWD,EAAMC,CAAQ,EAAIC,EAAaD,CAAQ,EACjH,CAEA,OAAOE,EAAgB,EAAE,cAAcT,EAAMM,EAAOD,CAAQ,CAC9D,CACO,IAAMK,EAAOX,EACPY,EAAWF,EAAgB,EAAE,SDtC1C,IAAMG,EAAQC,EAAgB,EACxBC,EAAKF,EA8BLG,EAAM,IAAI,MAAqB,CAAC,EAAU,CAC9C,IAAIC,EAAGC,EAAGC,EAAG,CACX,IAAMC,EAAM,QAAQ,IAAIH,EAAGC,EAAGC,CAAC,EAC/B,OAAIC,GACQC,EAAC,QAAK,uBAAWH,EAAE,8BAA0B,CAC3D,CACF,CAAC,EAiBDI,EAAO,MACJC,GAAqB,CACfC,EAAG,iBAAgBA,EAAG,eAAiBD,GAE5C,SAASE,EAAgB,CAAE,SAAAC,EAAU,GAAGC,CAAM,EAAQ,CACpD,IAAMC,EAAUC,EAACC,EAAI,YAAJ,CAAiB,GAAGH,EAAO,SAAQ,GAAC,EAE/CI,EACJF,EAACC,EAAI,kBAAJ,CACC,MAAM,gBACN,OAAQ,IAAM,CACZ,IAAME,EAAeL,EAAM,WAAW,MAAM,MAAQ,IAAMA,EAAM,WAAW,MAAM,QAAQ,KAEzFM,EAAQ,MAAM,mBAAmB,CAAE,SAAU,IAAK,OAAQ,GAAI,CAAC,EAC/DA,EAAQ,OAAO,0BAA0B,CACvC,MAAO,GACP,aAAAD,CACF,CAAC,EAGDC,EAAQ,aAAa,qBAAqB,mBAAmBD,CAAY,CAAC,EAE1E,IAAME,EAAQC,EAAU,oCAAqC,CAAC,CAACC,CAAE,KAC7DT,EAAM,mBAAmBA,EAAM,YAAY,EAC3CM,EAAQ,QAAQ,wBAAwB,CACtC,aAAcN,EAAM,aAAa,oBACjC,QAAS,OACT,iBAAkB,GAClB,WAAYA,EAAM,MAClB,kBAAmB,CAAC,SAASS,EAAG,IAAI,MAAM,GAAG,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC,CAC9D,CAAC,EACDC,EAAW,EACXH,EAAM,EACC,GACR,EACDG,EAAaF,EAAU,cAAeD,EAAO,EAAI,CACrD,EACD,EAIH,OAAAN,EAAO,MAAQA,EAAO,OAASA,EAAO,KACtCA,EAAO,KAAO,YAAaU,EAAM,CAE/B,IAAMC,EAAOX,EAAO,MAAM,MAAM,KAAM,SAAS,EAC/C,OAAID,EAAM,cAAc,qBAAqBY,EAAK,MAAM,SAAS,CAAC,EAAE,MAAM,SAAS,KAAKR,CAAG,EACpFQ,CACT,EACOX,CACT,CAeC,OAACY,EAAc,cAAgB,SAAUC,EAASd,KAAeD,EAAiB,CACjF,GAAI,CAACC,GAAO,SAAU,CACpB,IAAMe,EAAKD,EAAG,SAAS,EAUnBC,EAAG,SAAS,iBAAiB,IAAGZ,EAAI,kBAAoBW,GAG1DC,EAAG,SAAS,QAAQ,GACpBA,EAAG,SAAS,UAAU,GACtBA,EAAG,SAAS,iBAAiB,GAC7BA,EAAG,SAAS,eAAe,GAC3BA,EAAG,SAAS,aAAa,IAEzBZ,EAAI,eAAiBW,GAKrBC,EAAG,SAAS,eAAe,GAC3BA,EAAG,SAAS,WAAW,GACvBA,EAAG,SAAS,WAAW,GACvBD,IAAOhB,IAEPK,EAAI,YAAcW,EAClBA,EAAKhB,EAET,CAEA,OADaF,EAAkB,KAAK,KAAMkB,EAAId,EAAO,GAAGD,CAAQ,CAElE,EAEO,IAAOc,EAAM,cAAgBjB,CACtC,GAAGC,EAAG,gBAAkBgB,EAAM,aAAa,CAC7C,EEjKO,SAASG,GAAW,CACzBC,EAAO,QAAQC,GAAKA,EAAE,CAAC,CACzB",
  "names": ["modules", "findReactModule", "react", "e", "unints", "actions", "intercept", "RESERVED_PROPS", "hasOwnProperty", "jsx", "type", "config", "maybeKey", "key", "ref", "children", "props", "propName", "defaultProps", "findReactModule", "jsxs", "Fragment", "React", "findReactModule", "em", "ele", "t", "p", "r", "got", "jsxs", "unints", "origCreateElement", "em", "ContextMenuHook", "children", "props", "newRet", "jsx", "ele", "yes", "searchPhrase", "actions", "unint", "intercept", "pl", "unintClose", "args", "retn", "React", "el", "ts", "onUnload", "unints", "e"]
}
